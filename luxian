#志愿填报咨询#
鉴于上一篇计算机专业互联网就业现状引起了广泛的讨论和关注，这次我就来说一下，针对想要做Java后端开发方向的同学，如何能在毕业的时候脱颖而出，将你的同学们按在地上摩擦[流汗滑稽][流汗滑稽]同时这一篇也适用于初，中级Java后端工程师。本文的主要内容是一名合格的Java高级工程师/架构师应该掌握的技能树（面试点）。
一、Java基础
1、集合框架（Set/List/Map）重点：ArrayList/HashMap原理，源码，底层实现，扩容方式等等；
2、第三方框架，其实这些并不属于jdk的东西，但是后端开发框架和jdk就是绑定的，所以通通归到基础里面：
必须掌握：springboot/springmvc，mybatis
选择性掌握：hibernate（互联网公司基本已弃用），spring cloud全家桶（包括zuul，eureka，config，Hystrix，Ribbon。通常大厂都有自己开发的服务治理套件，不用这一套，小厂也很少用，学习成本高）
3、多线程：①juc包下的常见类的用法、原理，比如CurrentHashMap，AtomicXX，Lock接口及其实现等。②Executor框架，包括线程池原理，创建线程的方法，不同线程池区别等。③volatile，synchronized关键字用法，区别，实现原理，Java对象头，锁状态，偏向锁，CAS。
二、中间件（包含数据库）
1、缓存；缓存分为本地缓存和分布式缓存，本地不多说，guava的loadingCache了解一下；分布式缓存代表redis，重中之重，有关redis的一切（源码实现可以不必）原理，作用，数据类型，常见使用场景，异常情况处理，配置参数，端口，集群，哨兵等等等等；
2、mq；常见mq有rabbit，active，kafka等，重点rabbit，kafka。掌握mq的原理，使用场景，如何控制重复消费（接口幂等设计），消息不丢失，顺序消费，集群等知识点；
3、zookeeper；使用场景（重点），实现原理，Paxos算法（理解）重点分布式锁；
4、RPC；常见dubbo，thrift，ZeroIce等，重点dubbo，原理，作用，通信方式（tcp），数据格式等等。
5、数据库；常见mysql，oracle，mongodb；重点mysql，底层实现，索引，B+树，间隙锁，乐观锁，存储引擎，分库分表设计等。mongodb这种非关系型数据库和关系型数据库的区别，优缺点，使用场景等。
6、负载均衡；掌握nginx配置，作用，负载均衡类型。模块开发等更深的内容不做要求，除非你是中间件开发团队。
三、JVM
大家都知道java是一次编写随便运行[受虐滑稽]并且不用工程师手动编写代码回收内存。java之所以能支持在各种不同平台不用适配代码，就是jvm的作用。要求掌握GC收集器，常见搭配，收集器垃圾回收过程，调优实践等等，字节码，除了hotspot之外的其他虚拟机了解即可。这一块知识偏理论，记背为主，实践为辅。而且因为jdk目前更新速度令人发指，所以学习时注意实效性，推荐以jdk8为准（为什么？因为互联网公司都用8）。
四、算法和数据结构
现在面试，技术一面通常都是考算法，但不同公司考察的难度不同，头条就比较难，美团就很简单[流汗滑稽]
必须掌握：冒泡，快排等常见排序算法，数组，链表，二叉树等，要求链表，二叉树必须能够手写（不一定考察，但必须会）
其他数据结构选择性掌握，算法学习没有捷径，只能去刷题（力扣）
五、架构设计
高级工程师和架构师必须掌握的能力，初中级不做要求。架构设计简单来说就是把以上全部这些破玩意[受虐滑稽]整合到一起的能力，给你一个场景，比如电商秒杀，高并发场景下如何保障系统的可用性，提升用户体验，选择什么中间件来实现，可能遇到的问题等等。想要提升架构设计能力，经验必不可少，同时可以在技术博客参考业界最佳实践，是一个不断积累的过程，从能够自主设计开发一个小功能模块，到整个完整系统的设计开发能力，无法一蹴而就。
六、其他
netty，mina等网络通讯组件；
spark，elk，Hadoop等大数据相关技术；
docker，虚拟化技术；
这些东西通常不要求掌握，但是加分项，网络通讯和大数据的东西可以应聘更加垂直的后端岗位，竞争相对没有那么激烈，薪资待遇可观

以上这些就是一个Java后端的整体技术图谱，比较粗糙，其中每一项展开来写都能写成一整个系列内容，但由于本人能力限制，其中难免会有一些错漏。
希望选择从事这个行业的同学能勉励自己，不要做一个只会面向搜索引擎编程复制黏贴的代码抄写员混日子，然后35岁被淘汰。
有学习中遇到的问题和困惑欢迎评论区、私信咨询，知无不答（免费[doge原谅ta]）
@alexkillers @梨子 @酷安小编 @八百标兵 @好兆头
